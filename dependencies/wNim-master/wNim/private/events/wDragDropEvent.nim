#====================================================================
#
#               wNim - Nim's Windows GUI Framework
#                 (c) Copyright 2017-2019 Ward
#
#====================================================================

## These events are generated by wWindow during a drag-and-drop operation.
#
## :Superclass:
##   `wEvent <wEvent.html>`_
#
## :Seealso:
##   `wDataObject <wDataObject.html>`_
#
## :Events:
##   ==============================  =============================================================
##   wDragDropEvent                  Description
##   ==============================  =============================================================
##   wEvent_DragEnter                When the mouse enters the drop target.
##   wEvent_DragOver                 When the mouse is being dragged over the drop target.
##   wEvent_DragLeave                When the mouse leaves the drop target.
##   wEvent_Drop                     When the user drops a data object on the target.
##   ==============================  =============================================================

DefineIncrement(wEvent_DragDropFirst):
  wEvent_DragEnter
  wEvent_DragOver
  wEvent_DragLeave
  wEvent_Drop
  wEvent_DragDropLast

proc isDragDropEvent(msg: UINT): bool {.inline.} =
  msg in wEvent_DragDropFirst..wEvent_DragDropLast

method getDataObject*(self: wDragDropEvent): wDataObject {.property, inline.} =
  ## Returns the wDataObject object associated with the drop target.
  result = self.mDataObject

method getEffect*(self: wDragDropEvent): int {.property, inline.} =
  ## Returns the effect for drag and drop. *effect* should be one of wDragNone,
  ## wDragCopy, wDragMove or wDragLink.
  result = self.mEffect

method setEffect*(self: wDragDropEvent, effect: int) {.property, inline.} =
  ## Sets the effect for drag and drop. *effect* should be one of wDragNone,
  ## wDragCopy, wDragMove or wDragLink.
  self.mEffect = effect
